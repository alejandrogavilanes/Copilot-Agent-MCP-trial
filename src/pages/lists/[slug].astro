---
import Layout from '../../layouts/Layout.astro';
import LinkList from '../../components/LinkList';
import { LinkHealth } from '../../components/LinkHealth';
import Toast from '../../components/Toast';
import ShortcutsDialog from '../../components/ShortcutsDialog';
import { query } from '../../utils/db';
import { toastStore } from '../../components/Toast';
import ErrorBoundary from '../../components/ErrorBoundary.astro';

const { slug } = Astro.params;

const listResult = await query(`
  SELECT id, title, description, is_published
  FROM link_lists
  WHERE slug = $1
`, [slug]);

if (listResult.rows.length === 0) {
  return Astro.redirect('/404');
}

const list = listResult.rows[0];

// Handle delete request
if (Astro.request.method === 'POST') {
  const formData = await Astro.request.formData();
  const action = formData.get('action');
  
  if (action === 'delete') {
    const { deleteList } = await import('../../stores/link-lists');
    await deleteList(list.id);
    return Astro.redirect('/');
  }
}
---

<Layout title={list.title || 'Untitled List'}>
  <main class="max-w-4xl mx-auto py-8 px-4 sm:px-6 lg:px-8">
    <div class="space-y-6">
      <div class="flex justify-between items-start">
        <div>
          <h1 class="text-3xl font-bold text-gray-900">{list.title || 'Untitled List'}</h1>
          {list.description && (
            <p class="mt-2 text-gray-600">{list.description}</p>
          )}
        </div>
        <form method="POST" onsubmit="return confirm('Are you sure you want to delete this list? This action cannot be undone.')">
          <input type="hidden" name="action" value="delete" />
          <button
            type="submit"
            class="inline-flex items-center px-3 py-2 border border-transparent text-sm font-medium rounded-md text-red-700 bg-red-100 hover:bg-red-200"
          >
            Delete List
          </button>
        </form>
      </div>

      <div class="grid grid-cols-1 md:grid-cols-4 gap-8">
        <div class="md:col-span-3 bg-white shadow-sm rounded-lg p-6">
          <ErrorBoundary>
            <LinkList client:load listId={list.id} />
          </ErrorBoundary>
        </div>
        <div class="md:col-span-1 bg-white shadow-sm rounded-lg p-6">
          <ErrorBoundary>
            <LinkHealth client:load listId={list.id} />
          </ErrorBoundary>
        </div>
      </div>

      <div class="flex justify-between items-center">
        <div class="flex items-center space-x-2">
          <span class="text-sm text-gray-500">Share this list:</span>
          <button
            id="copy-url"
            class="inline-flex items-center px-3 py-1 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-brand-500"
            onclick="
              navigator.clipboard.writeText(window.location.href);
              window.toastStore.set({ message: 'URL copied to clipboard!', type: 'success' });
            "
          >
            Copy URL
          </button>
        </div>

        {!list.is_published && (
          <form action={`/api/lists/${list.id}/publish`} method="POST">
            <button
              type="submit"
              class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-brand-600 hover:bg-brand-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-brand-500"
            >
              Publish List
            </button>
          </form>
        )}
      </div>
    </div>
  </main>
  <Toast client:load />
  <ShortcutsDialog client:load />

  <div class="fixed bottom-4 left-4 text-sm text-gray-500">
    Press <kbd class="px-1 py-0.5 text-xs font-semibold bg-gray-100 border border-gray-200 rounded">?</kbd> for keyboard shortcuts
  </div>
</Layout>

<script>
import { toastStore } from '../../components/Toast';
// Make toastStore available globally for the copy button
window.toastStore = toastStore;
</script>